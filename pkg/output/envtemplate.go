package output

import (
	"fmt"
	"os"
	"path/filepath"
	"text/template"

	"github.com/yammerjp/optruck/pkg/op"
)

type EnvTemplateDest struct {
	Path string
}

func (d *EnvTemplateDest) GetPath() string {
	return d.Path
}

func (d *EnvTemplateDest) GetBasename() string {
	return filepath.Base(d.Path)
}

type envTemplateData struct {
	*op.SecretResponse
	Dest *EnvTemplateDest
}

func (d *EnvTemplateDest) Write(resp *op.SecretResponse) error {
	file, err := os.OpenFile(d.Path, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, 0644)
	if err != nil {
		return fmt.Errorf("failed to open env template file: %v", err)
	}
	defer file.Close()

	tmpl, err := template.New("env-template").Parse(`# This file was generated by optruck.
#   - 1password vault: {{.VaultName}}{{if .AccountName}}
#   - 1password account: {{.AccountName}}{{end}}
# To restore, run the following command:
#   $ cat {{.Dest.GetBasename}} | grep -v '^#' | op inject > .env

{{range .GetFieldRefs}}{{.Label}}={{.Ref}}
{{end}}
`)
	if err != nil {
		return err
	}

	data := &envTemplateData{
		SecretResponse: resp,
		Dest:           d,
	}
	return tmpl.Execute(file, data)
}
